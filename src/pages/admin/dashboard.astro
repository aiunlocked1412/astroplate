---
export const prerender = false;

import AdminLayout from "@/layouts/AdminLayout.astro";
import { getCollection } from 'astro:content';

// Check authentication
const session = Astro.cookies.get('admin_session');
if (!session || session.value !== 'authenticated') {
  return Astro.redirect('/admin/login');
}

// Get all blog posts
const allPosts = await getCollection('blog');

// Sort by date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.data.date || a.data.pubDate || 0);
  const dateB = new Date(b.data.date || b.data.pubDate || 0);
  return dateB.getTime() - dateA.getTime();
});

// Count posts by category
const categoryCounts: Record<string, number> = {};
allPosts.forEach(post => {
  const categories = post.data.categories || [];
  categories.forEach((cat: string) => {
    categoryCounts[cat] = (categoryCounts[cat] || 0) + 1;
  });
});
---

<AdminLayout title="Admin Dashboard - AI Unlocked">
  <!-- Header -->
  <header class="bg-gray-800 border-b border-gray-700">
    <div class="container mx-auto px-4 py-4">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-2xl font-bold text-white">AI Unlocked Admin</h1>
          <p class="text-gray-400 text-sm">Dashboard</p>
        </div>
        <div class="flex items-center gap-4">
          <a href="/" class="text-gray-300 hover:text-white transition">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
            </svg>
          </a>
          <button
            id="logoutButton"
            class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg transition"
          >
            ออกจากระบบ
          </button>
        </div>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="container mx-auto px-4 py-8">
    <!-- Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
      <!-- Total Posts -->
      <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-gray-400 text-sm mb-1">บทความทั้งหมด</p>
            <p class="text-3xl font-bold text-white">{allPosts.length}</p>
          </div>
          <div class="bg-blue-600 rounded-lg p-3">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Categories -->
      <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-gray-400 text-sm mb-1">หมวดหมู่</p>
            <p class="text-3xl font-bold text-white">{Object.keys(categoryCounts).length}</p>
          </div>
          <div class="bg-green-600 rounded-lg p-3">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Published -->
      <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-gray-400 text-sm mb-1">เผยแพร่แล้ว</p>
            <p class="text-3xl font-bold text-white">{allPosts.filter(p => !p.data.draft).length}</p>
          </div>
          <div class="bg-purple-600 rounded-lg p-3">
            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- Posts Table -->
    <div class="bg-gray-800 rounded-lg border border-gray-700 overflow-hidden">
      <div class="p-6 border-b border-gray-700">
        <div class="flex items-center justify-between">
          <h2 class="text-xl font-semibold text-white">รายการบทความทั้งหมด</h2>
          <input
            type="text"
            id="searchInput"
            placeholder="ค้นหาบทความ..."
            class="px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
      </div>

      <div class="overflow-x-auto">
        <table class="w-full">
          <thead class="bg-gray-700">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                #
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                หัวข้อ
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                หมวดหมู่
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                วันที่
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                สถานะ
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                การดำเนินการ
              </th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-700" id="postsTableBody">
            {sortedPosts.map((post, index) => {
              const date = new Date(post.data.date || post.data.pubDate || 0);
              const formattedDate = date.toLocaleDateString('th-TH', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
              });
              const categories = post.data.categories || [];
              const isDraft = post.data.draft;

              return (
                <tr class="hover:bg-gray-700/50 transition post-row" data-title={post.data.title?.toLowerCase()}>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                    {index + 1}
                  </td>
                  <td class="px-6 py-4 text-sm text-white">
                    <div class="max-w-md">
                      <p class="font-medium">{post.data.title}</p>
                      {post.data.description && (
                        <p class="text-gray-400 text-xs mt-1 line-clamp-2">
                          {post.data.description}
                        </p>
                      )}
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm">
                    <div class="flex flex-wrap gap-1">
                      {categories.slice(0, 2).map((cat: string) => (
                        <span class="bg-blue-900/50 text-blue-300 px-2 py-1 rounded text-xs">
                          {cat}
                        </span>
                      ))}
                      {categories.length > 2 && (
                        <span class="text-gray-400 text-xs">+{categories.length - 2}</span>
                      )}
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                    {formattedDate}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm">
                    {isDraft ? (
                      <span class="bg-yellow-900/50 text-yellow-300 px-2 py-1 rounded text-xs">
                        แบบร่าง
                      </span>
                    ) : (
                      <span class="bg-green-900/50 text-green-300 px-2 py-1 rounded text-xs">
                        เผยแพร่แล้ว
                      </span>
                    )}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm">
                    <a
                      href={`/blog/${post.slug}`}
                      target="_blank"
                      class="text-blue-400 hover:text-blue-300 transition"
                    >
                      ดู →
                    </a>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </div>
    </div>

    <!-- Category Stats -->
    <div class="mt-8 bg-gray-800 rounded-lg border border-gray-700 p-6">
      <h3 class="text-lg font-semibold text-white mb-4">สถิติตามหมวดหมู่</h3>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        {Object.entries(categoryCounts)
          .sort(([, a], [, b]) => b - a)
          .map(([category, count]) => (
            <div class="bg-gray-700 rounded-lg p-4">
              <p class="text-gray-400 text-sm">{category}</p>
              <p class="text-2xl font-bold text-white">{count}</p>
            </div>
          ))}
      </div>
    </div>
  </main>

  <script>
    // Logout functionality
    const logoutButton = document.getElementById('logoutButton');
    logoutButton?.addEventListener('click', async () => {
      try {
        const response = await fetch('/api/auth/logout', {
          method: 'POST',
        });

        if (response.ok) {
          window.location.href = '/admin/login';
        }
      } catch (error) {
        console.error('Logout error:', error);
        alert('เกิดข้อผิดพลาดในการออกจากระบบ');
      }
    });

    // Search functionality
    const searchInput = document.getElementById('searchInput');
    const postRows = document.querySelectorAll('.post-row');

    searchInput?.addEventListener('input', (e) => {
      const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();

      postRows.forEach((row) => {
        const title = row.getAttribute('data-title') || '';
        if (title.includes(searchTerm)) {
          (row as HTMLElement).style.display = '';
        } else {
          (row as HTMLElement).style.display = 'none';
        }
      });
    });
  </script>
</AdminLayout>
